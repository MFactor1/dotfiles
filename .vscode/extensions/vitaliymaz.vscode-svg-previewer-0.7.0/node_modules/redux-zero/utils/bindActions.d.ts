import Store from "../interfaces/Store";
import { Action } from "../types";
declare type OmitFirstArg<F, R> = F extends (x: any, ...args: infer P) => any ? (...args: P) => R : never;
export default function bindActions<S, T extends {
    [key: string]: Action<S>;
}>(actions: ((store: Store<S>, ownProps: any) => T) | T, store: Store<S>, ownProps?: object): {
    [K in keyof T]: OmitFirstArg<T[K], Promise<void> | void>;
};
export {};
